{
  "name": "PromptGenerator (test)",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -544,
        0
      ],
      "id": "610a01d2-13ce-4854-98b9-5288db769266",
      "name": "Telegram Trigger",
      "webhookId": "e596cc95-30dd-4a70-a183-2b077a66a367",
      "credentials": {
        "telegramApi": {
          "id": "FNd5VUe1tZm8dvAH",
          "name": "AkademChoombas_bot"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "db1dfcac-76a8-41d2-a7f9-557e2227c6e8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "document"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -272,
        0
      ],
      "id": "66e54307-12b4-4ccd-90f6-dca792e64c30",
      "name": "Switch"
    },
    {
      "parameters": {
        "binaryPropertyName": "=data"
      },
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "position": [
        -32,
        0
      ],
      "typeVersion": 1,
      "id": "c65835b3-8626-446a-bf55-3c756bfefc61"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "={\"role\":\"Ты — **Сценарист-Визуализатор Комиксов AI**, эксперт в адаптации текста в хронологически последовательный комикс в стиле **Marvel Comics** для Kandinskiy. Твоя задача — обеспечить **абсолютную визуальную консистентность** Отца и Сына. **ВЫВОДИ ТОЛЬКО ЧИСТЫЙ RAW JSON МАССИВ, БЕЗ ЛИШНИХ СИМВОЛОВ, КОММЕНТАРИЕВ ИЛИ БЛОКОВ MARKDOWN.**\",\"task\":\"Преобразуй **Исходный Текст Документа** в JSON-массив фреймов.\",\"style_details\":\"Стиль: **классические комиксы Marvel (90-е/2000-е): динамика, толстый контур, яркие цвета, высокая детализация, **cel shading**, мощные тени**. На фреймах **НЕТ** текста.\",\"characters_details\":{\"father\":\"Отец (50 лет, **Мудрец**): Мускулистый, высокий, седые виски, короткая стрижка, проницательный, добрый взгляд, легкая небритость. Белая рубашка с закатанными рукавами, темно-синие брюки. Поза: уверенная, наставническая. **ИДЕАЛЬНОЕ СХОДСТВО В КАЖДОМ ФРЕЙМЕ.**\",\"son\":\"Сын (16 лет, **Ученик**): Стройный, черные волосы, внимательные карие глаза. Серая толстовка с капюшоном, черные джинсы. Поза: заинтересованный, слушающий, обдумывающий. **ИДЕАЛЬНОЕ СХОДСТВО В КАЖДОМ ФРЕЙМЕ.**\"},\"output_json_schema\":[{\"frame_id\":\"int\",\"logical_part_summary\":\"string\",\"dialogue\":{\"father_line\":\"string\",\"son_line\":\"string\"},\"kandinsky_prompt\":\"string (Полный, детальный промпт для Kandinskiy, включая все детали стиля и персонажей. Без текста на изображении.)\",\"negative_prompt\":\"string (text, blurry, low resolution, artifacts, multiple heads, low quality, watermark, signature.)\"}],\"input_document_placeholder\":\"{{ $json.info.Title }}. {{ $json.text }}\"}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        432,
        -768
      ],
      "id": "291aeb2e-e28a-4d7d-88ba-73ad387fa1b5",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "V3wQQjQkzkJ8M0Ap",
          "name": "Akadem Choombas"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "={\"role\":\"Ты — **Сценарист-Визуализатор Комиксов AI**, эксперт в адаптации текста в динамичный комикс в стиле **Scott Pilgrim/8-bit Game** для Kandinskiy. Твоя задача — обеспечить **идеальную визуальную консистентность** персонажей в их **двойной роли (Реальность/Фантазия)**. **ВЫВОДИ ТОЛЬКО ЧИСТЫЙ RAW JSON МАССИВ, БЕЗ ЛИШНИХ СИМВОЛОВ, КОММЕНТАРИЕВ ИЛИ БЛОКОВ MARKDOWN.**\",\"task\":\"Преобразуй **Исходный Текст Документа** в JSON-массив фреймов. Каждый промпт должен визуализировать логический блок через призму игровой фантазии.\",\"style_details\":\"Стиль: **Scott Pilgrim comic style, pixelated semi-realistic, black-white с редкими акцентами (зеленый, красный), динамичные ракурсы (dynamic angles), комичные преувеличения (огромные кулаки, взрывы), игровые элементы (health bars, XP, пиксельные эффекты)**. На фреймах **НЕТ** текста.\",\"characters_details\":{\"father\":\"Отец (40–50 лет): **Консистентный образ**: Легкая борода, очки. В Реальности: рубашка и джинсы. В Фантазии: «Игровой мастер» (wise knight with game controller / hacker with pixel sword). Поза: **ухмылка, уверенность**.\",\"son\":\"Сын (12–15 лет): **Консистентный образ**: Взъерошенные волосы. В Реальности: толстовка. В Фантазии: «Игровой напарник» (young warrior / hacker assistant). Поза: **широкие глаза, активные жесты**.\",\"kandinsky_character_base_prompt\":\"Scott Pilgrim comic style, pixelated black-white with color accents, dynamic poses, detailed characters, no text on image, dynamic angles, game-like visual effects.\"},\"processing_logic\":[\"1. **Разбиение:** Разбей Исходный Текст на логические части (1 часть = 1 фрейм).\",\"2. **Диалог:** Сформулируй диалог (Отец - мудрец, Сын - ученик).\",\"3. **Промпт:** Сгенерируй **ПОЛНЫЙ** Kandinsky-промпт, комбинируя **characters_details.kandinsky_character_base_prompt** с деталями конкретной сцены, действиями персонажей (в их Фантазийных ролях) и фоном, отражающим суть логической части. **ВАЖНО:** Обеспечь консистентность по **Scott Pilgrim** и **8-bit** стилистике.\",\"4. **Последовательность:** Обеспечь строгую хронологию.\"],\"output_json_schema\":[{\"frame_id\":\"int\",\"logical_part_summary\":\"string\",\"dialogue\":{\"father_line\":\"string\",\"son_line\":\"string\"},\"kandinsky_prompt\":\"string (Полный, детализированный Kandinsky-промпт, включающий стилистику Scott Pilgrim, пиксельные элементы, черно-белую гамму с акцентами, и консистентное описание персонажей в их фантазийных ролях. Без текста на изображении.)\",\"negative_prompt\":\"string (text, blurry, low resolution, artifacts, multiple heads, low quality, watermark, signature, anime, manga, photorealism, 3d render.)\"}],\"input_document_placeholder\":\"{{ $json.info.Title }}. {{ $json.text }}\"}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        96,
        -784
      ],
      "id": "41c93a83-dc7d-4b46-b073-cd8d1c8aad91",
      "name": "Message a model1",
      "credentials": {
        "googlePalmApi": {
          "id": "V3wQQjQkzkJ8M0Ap",
          "name": "Akadem Choombas"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "=Роль: ты — ассистент-генератор промптов для визуализации текста в виде комикса. Твоя задача — из входного документа автоматически выделить логические части (сцены/этапы/реплики), затем для каждой логической части сформировать:\n  1) подробный текстовый промпт для Kandinskiy (не более 1000 символов), описывающий ровно один фрейм (визуальный образ) без текстовых вставок на картинке,\n  2) отдельную строку `negative_prompt` — набор запретов (выводится отдельным полем в JSON),\n  3) диалог (только текст) между двумя героями — Отцом и Сыном — который будет отображён отдельно в JSON (а не на картинке).\n\nОБЩИЕ ПРАВИЛА РАБОТЫ\n• Вывод — исключительно JSON. Никаких пояснений, мета-комментариев или нечётого текста — только валидный JSON, соответствующий схеме ниже.\n• Число фреймов: подбирай сбалансированно — не слишком много и не пропускай важного. Рекомендуемая логика: ~1 фрейм на 120–300 слов исходного текста; для очень коротких текстов — 1–3 фрейма, для длинных — 6–10 (но ориентируйся на смысловые переходы). Убедись, что ключевые события/идеи/диалоги покрыты.\n• Порядок фреймов — хронологический, в точности как логические части исходного документа.\n• На картинках — НИКАКОГО текста/фраз/пузырей/подписей. Диалог только в JSON-поле `dialogue`.\n• Стиль всех фреймов — единый (подробно описан ниже). Обязательно сохраняй консистентность персонажей (описание персонажей повторяется полностью в каждом промпте, но см. ограничение длины — см. раздел \"Ограничение длины и компрессия\").\n\nОГРАНИЧЕНИЕ ДЛИНЫ И КОМПРЕССИЯ\n• Жёсткое требование: поле `kandinsky_prompt` для каждого фрейма не должно превышать **1000 символов**.\n• Если полный неусечённый промпт превышает 1000 символов — применяй последовательную компрессию по приоритетам:\n  1. Сохранять в первую очередь: заглавие сцены; окружение (локация, время суток, настроение); композицию (позиции и ракурс); character_tokens: \"FATHER_01 / SON_01\"; ключевую динамику/действие; стильовые теги; aspect_ratio (=1:1) и essential tech tags.\n  2. Сокращать второстепенные детали описания одежды/аксессуаров до ключевых слов (например: \"leather_coat, gray_sweater, wristwatch\").\n  3. Переходить к сокращению описания персонажей до компактного стандартизированного блока (макс 300 символов), использующего сокращения: например \"FATHER_01:[50yo,185cm,k-square-jaw,short dark-silver hair,leather_coat]\" и \"SON_01:[23yo,175cm,slim,short messy dark-brown hair,denim_jacket]\".\n  4. Если всё ещё превышает лимит — удалять редкие декоративные теги (например: grainy_texture_optional) в последнюю очередь.\n• Важно: всегда включать token `character_tokens: FATHER_01 / SON_01` — это гарантия, что снаружи система может подставить полный шаблон персонажей при необходимости.\n\nОПИСАНИЕ ПЕРСОНАЖЕЙ (для полной версии; при необходимости сократить — используйте компактный блок, см. выше)\n• Отец (идентификатор: FATHER_01):\n  - Внешность: мужчина ~50 лет, рост — выше среднего (в образе: 185 см, пропорции 8 голов), плотная выправка, широкие плечи.\n  - Черты лица: квадратная челюсть, слегка седеющие коротко-стриженные волосы (тёмно-коричневые с серебристыми прядями), густые брови, тёплые глубокие глаза, маленький шрам/родинка у левого бровного края.\n  - Одежда и аксессуары: тёмно-коричневый кожаный плащ до середины бедра, тёмно-серый свитер с высоким воротом, тёмные штаны, тяжёлые ботинки, классические наручные часы на левой руке, иногда очки с тонкой металлической оправой (надевать по сценарию).\n  - Жесты/манера: спокойные уверенные позы, склоняется к сыну при объяснениях, жесты открытые, ладони видны.\n• Сын (идентификатор: SON_01):\n  - Внешность: молодой мужчина 22–25 лет, рост ~175 см (на 1-2 головы ниже отца), стройный.\n  - Черты лица: мягкие округлые скулы, короткие взъерошенные тёмно-каштановые волосы, внимательные глаза, чуть застенчивая улыбка.\n  - Одежда и аксессуары: джинсовая куртка с нашивками в стиле ретро, белая футболка, тёмные джинсы, кеды, маленький рюкзак через одно плечо.\n  - Жесты/манера: заострённое внимание, часто наклоняется вперёд, пытается уточнить, держит блокнот/палец у подбородка.\n\nСТИЛЬ КОМИКСА (вставляй во все промпты)\n• Визуал: чёрно-белый с редкими цветными акцентами (использовать зелёные или красные акценты для обозначения «уровней» или ключевых эффектов).\n• Элементы: лёгкие пиксельные вставки (8-bit элементы как декоративный акцент), но кадры не должны быть полностью в пиксель-стиле — максимум мелкие пиксельные детали (HUD, блёстки, иконки).\n• Панели: резкие углы, динамичные кадры, комичное преувеличение (например, увеличенные кулаки, экспрессивные взрывы, преувеличенные реакции).\n• Вдохновение: эстетика O’Malley + босс-битвы (dramatic boss battle panels), но выдержанная в одном стиле на всю серию.\n• Графика: high-contrast ink lines, сильный штрих, выраженные тени; никаких цветных градиентов, только точечные акценты зелёным/красным.\n• Запреты: **никаких** текстовых вставок, логотипов, водяных знаков, референсов известных брендов, QR-кодов.\n\nФОРМАТ KANDINSKIY-ПРОМПТА (что должен содержать текст промпта для каждого кадра)\n1. Короткое заглавие сцены (1 фраза).\n2. Описание окружения (локация, время суток, настроение).\n3. Детальная позиционная композиция: где стоят/сидят персонажи, ракурс (вид спереди / три четверти / крупный план / общий план), расстояние камеры (макрос/портрет/широкий план).\n4. Компактное или полное описание Отца и Сына (если место позволяет — полное; если нет — компактный блок, см. раздел \"ОГРАНИЧЕНИЕ ДЛИНЫ И КОМПРЕССИЯ\").\n5. Динамика/действие (что делают персонажи в кадре).\n6. Стильовые теги: monochrome, green_or_red_accents, 8bit_elements, sharp_panel_angles, exaggerated_proportions, OMalley_inspired, high_contrast_ink.\n7. Технические параметры (рекомендации): **aspect_ratio 1:1** (обязательно), high_detail, cinematic_lighting, grainy_texture_optional.\n8. **Negative prompts** НЕ включать внутрь `kandinsky_prompt` — они выводятся отдельным полем `negative_prompt` в JSON (см. схему).\n9. Обязательное поле: character_tokens: \"FATHER_01 / SON_01\" — включить в промпт для контроля.\n10. Жёсткое ограничение: итоговая строка `kandinsky_prompt` — **не более 1000 символов** (без учёта отдельного поля `negative_prompt`).\n\nТРЕБОВАНИЯ К JSON ВЫХОДУ (строго!)\n• Вывод должен быть единственным JSON-объектом, содержащим ключ `\"frames\"` — массив объектов в хронологическом порядке.\n• Каждый объект массива `\"frames\"` должен содержать поля (имена полей **обязательны**):\n\n{\n  \"frames\": [\n    {\n      \"id\": integer,                            // порядковый номер фрейма, начиная с 1\n      \"source_excerpt\": string,                 // короткий (до 140 знаков) фрагмент исходного текста, на который этот фрейм опирается\n      \"logical_summary\": string,                // 1–2 предложения, сводка логической части\n      \"kandinsky_prompt\": string,               // строка — полный промпт для Kandinskiy (включает ВСЕ пункты из \"ФОРМАТ KANDINSKIY-ПРОМПТА\") и обязательно <=1000 символов\n      \"negative_prompt\": string,                // отдельная строка с negative prompts (запретами), например: \"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance\"\n      \"dialogue\": [                             // массив реплик, в хронологическом порядке; на картинке реплик нет\n         { \"speaker\": \"Сын\" | \"Отец\", \"text\": string }\n      ],\n      \"suggested_aspect_ratio\": \"1:1\",          // всегда \"1:1\"\n      \"notes\": string|null                      // дополнительные рекомендации (коротко) или null\n    },\n    ...\n  ]\n}\n\n• НИКАКИХ лишних полей верхнего уровня.\n• Все строки — в UTF-8. JSON должен быть валидным (проверяй синтаксис).\n\nДОПОЛНИТЕЛЬНЫЕ ПРАВИЛА АНАЛИЗА ТЕКСТА (как разбивать на логические части)\n1. Ищи смену сцены/локации, явный переход времени, смену говорящего, ключевые события или кульминационные предложения — каждый из этих сигналов может означать новую логическую часть.\n2. Если в логической части есть длинный технический абзац — суммируй его и выдели основной визуальный образ + один-два ключевых предложения диалога.\n3. Избегай дробления: если сегмент несёт одну идею, объединяй его в один фрейм.\n4. Если часть содержит важные данные (список, шаги) — визуализируй только ключевой шаг (не весь список), но в `notes` укажи, какие элементы из списка были опущены.\n\nПРИМЕРНЫЕ СЕМПЛЫ (только для понимания формата; конечный вывод всё равно должен быть JSON как выше)\n(Пример не требуется выводить при ответе на данный запрос; он здесь только для справки.)\n\nКОНЕЦ ПРИМПТА — при получении документа:\n1) Проанализируй документ.\n2) Разбей его на логические части (обоснование каждой границы внутри internal_notes — НЕ включать в финальный JSON).\n3) Сгенерируй JSON, соответствующий схеме, с полными `kandinsky_prompt` (≤1000 символов для каждого фрейма), отдельными `negative_prompt` и диалогом.\n\nВАЖНО: окончательный ответ модели, исполняющей этот промпт, — только валидный JSON, как описано в разделе \"ТРЕБОВАНИЯ К JSON ВЫХОДУ\".\n",
              "role": "model"
            },
            {
              "content": "=Сформируй все данные, что указаны в твоей роли, основываясь на текст: \"{{ $json.info.Title }}. {{ $json.text }}\"",
              "role": "model"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        240,
        0
      ],
      "id": "3a51256a-0f9b-4eb9-b44b-efe4f343f7fd",
      "name": "Message a model2",
      "credentials": {
        "googlePalmApi": {
          "id": "V3wQQjQkzkJ8M0Ap",
          "name": "Akadem Choombas"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://5.130.46.22:1212/generate/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-key",
              "value": "BC1AD4CB882253B3A9F51A69D50A2F64"
            },
            {
              "name": "x-secret",
              "value": "A3039B34726711ADBEF47CA237EC67CF"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.kandinsky_prompt }}"
            },
            {
              "name": "width",
              "value": "512"
            },
            {
              "name": "height",
              "value": "512"
            },
            {
              "name": "format",
              "value": "png"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1744,
        -368
      ],
      "id": "a532c7f4-0688-4ff5-be57-c318e3cdde86",
      "name": "HTTP Request - Generate",
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "=https://api-key.fusionbrain.ai/key/api/v1/pipeline/status/{{$json.uuid}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Key",
              "value": "Key BC1AD4CB882253B3A9F51A69D50A2F64"
            },
            {
              "name": "X-Secret",
              "value": "Secret A3039B34726711ADBEF47CA237EC67CF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2016,
        -368
      ],
      "id": "b00ec7d2-eab9-499a-b7aa-06003934d0de",
      "name": "HTTP Request4",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0620c054-2b60-4122-bcd7-bac089e6e4d5",
              "leftValue": "={{ $json.status }}",
              "rightValue": "DONE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2224,
        -368
      ],
      "id": "e3c1b0e9-efaf-47b9-b15a-d00a72dec6cc",
      "name": "If1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2416,
        -192
      ],
      "id": "45a0c250-0a84-4e87-8e0c-6a5216b32cfc",
      "name": "Wait1",
      "webhookId": "aab7e75a-7a6c-48fb-8bc5-252976be3051"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=result.files[0]",
        "binaryPropertyName": "frame",
        "options": {
          "fileName": "frame.png"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2528,
        -384
      ],
      "id": "9105de49-550c-443f-a342-acc84f51056e",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "mode": "mergeByIndex"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        2816,
        -16
      ],
      "id": "35b25c18-bd94-4b32-b800-8d49946b74a3",
      "name": "Merge - Collect"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -160,
        272
      ],
      "id": "e8e3dbd9-2724-4cbc-864a-0a172317b56b",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "jsCode": "const outputItems = [];\n\nfor (const item of $input.all()) {\n    let rawText = item.json.content && item.json.content.parts ? (item.json.content.parts[0].text || '') : item.json.text || '';\n    let cleanedText = rawText\n        .replace(/```json\\n?|```/g, '')\n        .replace(/\\n|\\r/g, ' ')\n        .trim();\n\n    const startIndex = cleanedText.indexOf('[');\n    const endIndex = cleanedText.lastIndexOf(']');\n\n    let jsonString;\n\n    if (startIndex === -1 || endIndex === -1 || endIndex <= startIndex) {\n        // Дополнительно: попробуем извлечь объект {\"frames\": [...]} если формат такой\n        const framesStart = cleanedText.indexOf('\"frames\"');\n        if (framesStart !== -1) {\n            const arrStart = cleanedText.indexOf('[', framesStart);\n            const arrEnd = cleanedText.lastIndexOf(']');\n            if (arrStart !== -1 && arrEnd !== -1 && arrEnd > arrStart) {\n                jsonString = cleanedText.substring(arrStart, arrEnd + 1);\n            }\n        }\n        if (!jsonString) jsonString = '[]';\n        if (rawText.length > 0 && jsonString === '[]') {\n             console.warn('Внимание: Не удалось найти корректный JSON-массив. Возвращен пустой массив.');\n        }\n    } else {\n        jsonString = cleanedText.substring(startIndex, endIndex + 1);\n    }\n\n    try {\n        const parsedJson = JSON.parse(jsonString);\n        // Разные варианты: либо массив фреймов, либо объект {frames: [...]}.\n        let framesArr = [];\n        if (Array.isArray(parsedJson)) framesArr = parsedJson;\n        else if (parsedJson && Array.isArray(parsedJson.frames)) framesArr = parsedJson.frames;\n\n        if (framesArr.length) {\n            framesArr.forEach(frame => {\n                // Нормализуем: kandinsky_prompt в frame.kandinsky_prompt или frame.prompt\n                const kandinsky = frame.kandinsky_prompt || frame.kandinsky || frame.prompt || '';\n                outputItems.push({ json: { kandinsky_prompt: kandinsky, negative_prompt: frame.negative_prompt || '', dialogue: frame.dialogue || [] } });\n            });\n        }\n    } catch (e) {\n        console.error(`Ошибка парсинга JSON: ${e.message}. Проблема в строке: ${jsonString}`);\n    }\n}\n\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1104,
        0
      ],
      "id": "dc1fce2a-502e-4163-acde-8c837ac2e8dd",
      "name": "GenearteJSON"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b917fe38-78ac-48cb-a7fa-21c45acf20ab",
              "name": "original",
              "value": "={{ $json }}",
              "type": "object"
            },
            {
              "id": "499e6977-882a-4970-8a4a-eca2e46bee45",
              "name": "width",
              "value": "={{ $itemIndex % 2 === 0 ? 100 : 562 }}",
              "type": "number"
            },
            {
              "id": "5fb67afb-6d9a-405d-b8eb-838d846821e9",
              "name": "height",
              "value": "={{ ({0:100,1:100,2:812,3:812,4:1524,5:1524,6:100,7:100,8:812,9:812,10:1524,11:1524}[0 || itemIndex] || 0) }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        0
      ],
      "id": "ad87c815-398e-46cd-888e-82aa7621c456",
      "name": "Edit Fields1",
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "\n  {\n    \"content\": {\n      \"parts\": [\n        {\n          \"text\": \"```json\\n{\\n  \\\"frames\\\": [\\n    {\\n      \\\"id\\\": 1,\\n      \\\"source_excerpt\\\": \\\"1.1 Работники организации обязаны знать и соблюдать все требования настоящей инструкции. 1.2 Ответственность за обеспечение мер пожарной безопасности...\\\",\\n      \\\"logical_summary\\\": \\\"Отец объясняет Сыну фундаментальный принцип пожарной безопасности — личную ответственность каждого и необходимость знать правила.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Начало инструктажа. Минималистичный фон с полупрозрачными чертежами офиса. Отец и Сын стоят в центре. FATHER_01:[50yo,185cm,k-square-jaw,short dark-silver hair,leather_coat] кладёт руку на плечо SON_01:[23yo,175cm,slim,short messy dark-brown hair,denim_jacket]. Сын внимательно слушает. Вид в три четверти, средний план. Стиль: monochrome, green_or_red_accents, 8bit_elements, sharp_panel_angles, exaggerated_proportions, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, blurry, watermark\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Пап, ты хотел рассказать о безопасности на работе. С чего начинается?\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"С самого главного, сын. С ответственности. Каждый, кто здесь работает, обязан знать и соблюдать правила. Это закон.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Фон в виде чертежа символизирует начало изучения правил.\\\"\\n    },\\n    {\\n      \\\"id\\\": 2,\\n      \\\"source_excerpt\\\": \\\"2.1 К зданию должен быть обеспечен свободный подъезд. Коридоры, тамбуры, проходы к средствам тушения ... должны быть свободными.\\\",\\n      \\\"logical_summary\\\": \\\"Отец демонстрирует Сыну важность свободных эвакуационных путей, указывая на чистый, широкий коридор.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Свободный путь эвакуации. Отец и Сын в длинном, пустом офисном коридоре. FATHER_01:[50yo,185cm,leather_coat] уверенным жестом указывает вперёд, вдоль коридора. SON_01:[23yo,175cm,denim_jacket] смотрит в указанном направлении. Пол коридора подсвечен яркой зелёной направляющей стрелкой, выполненной в 8-bit стиле. Динамичный ракурс с низкой точки. Стиль: monochrome, green_accent, 8bit_elements, sharp_panel_angles, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting, exaggerated_perspective.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, clutter, obstacles\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"Смотри. Путь к выходу всегда должен быть таким — свободным. Никаких коробок, стульев, ничего. Это путь к спасению.\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Понял. Чтобы в панике не споткнуться.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Зелёный цвет акцентирует правильное, безопасное состояние.\\\"\\n    },\\n    {\\n      \\\"id\\\": 3,\\n      \\\"source_excerpt\\\": \\\"2.3 В помещении запрещается: а) хранить огнеопасные или легковоспламеняющиеся вещества... в) оставлять без присмотра включенные нагревательные электроприборы.\\\",\\n      \\\"logical_summary\\\": \\\"Отец указывает на запрещённые предметы и действия в помещении, такие как хранение горючих жидкостей и оставленные без присмотра электроприборы.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Запрещенные предметы. Крупный план стола, заваленного опасными вещами: канистра с горючим, старый дымящийся обогреватель. Над каждым предметом висит большой пиксельный красный крест (8-bit 'X'). Рука Отца (FATHER_01) указывает на этот беспорядок. Композиция кадра напряженная. Стиль: monochrome, red_accents, 8bit_elements, sharp_panel_angles, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting, macro_shot.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, blurry, safe_environment\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"А что категорически нельзя делать?\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"Никогда не храни здесь горючее. Не используй открытый огонь. И никогда, слышишь, никогда не оставляй включенные обогреватели без присмотра.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Красный акцент и 8-битные кресты чётко обозначают запрет.\\\"\\n    },\\n    {\\n      \\\"id\\\": 4,\\n      \\\"source_excerpt\\\": \\\"3.3 При эксплуатации электросетей запрещается: а) использовать проводами с поврежденной изоляцией; б) применять ... вместо автоматов защиты ... - жучки\\\",\\n      \\\"logical_summary\\\": \\\"Отец обращает внимание Сына на смертельную опасность неисправной электропроводки и самодельных предохранителей («жучков»).\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Опасность в розетке. Макро-кадр электрической розетки, из которой торчит вилка с потрескавшимся, искрящим проводом. Вместо предохранителя в щитке виден самодельный 'жучок', светящийся зловещим красным светом. FATHER_01 указывает на искры пальцем, его лицо за кадром. Стиль: monochrome, red_accent, 8bit_elements_sparks, sharp_panel_angles, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting, dramatic_shadows.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, safe_wiring\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"Электричество — не игрушка. Видишь поврежденный провод — не трогай, не используй. А эти 'жучки' вместо предохранителей — прямой путь к пожару.\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Выглядит жутко. Понял, только сертифицированные автоматы.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Фокус на источнике опасности. Красный свет от «жучка» — ключевой элемент.\\\"\\n    },\\n    {\\n      \\\"id\\\": 5,\\n      \\\"source_excerpt\\\": \\\"4.1 Каждый сотрудник обнаруживший пожар или признак горения обязан: а) немедленно сообщить об этом по телефону 01 в пожарную охрану...\\\",\\n      \\\"logical_summary\\\": \\\"Отец объясняет первый и самый важный шаг при обнаружении пожара — немедленно вызвать пожарную охрану.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Первый звонок. Сын (SON_01) стоит у стены, в руке держит смартфон, на экране которого выведен номер экстренной службы, подсвеченный зелёным. Его лицо выражает тревогу, но и решительность. В дальнем углу комнаты виден лёгкий, стилизованный дымок. Над головой Сына появляется 8-битная иконка телефонной трубки. Средний план. Стиль: monochrome, green_accent, 8bit_elements, sharp_panel_angles, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, panic, fire_extinguisher\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"И вот, самое главное. Если увидел дым или огонь — что делаешь в первую очередь?\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Не паникую. Сразу звоню в пожарную. Называю адрес, что горит и кто я.\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"Именно. Сначала звонок, потом всё остальное.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Акцент на правильном первом действии — звонке, а не на тушении.\\\"\\n    },\\n    {\\n      \\\"id\\\": 6,\\n      \\\"source_excerpt\\\": \\\"4.1 ... б) принять меры по эвакуации людей, тушению пожара и сохранности материальных ценностей.\\\",\\n      \\\"logical_summary\\\": \\\"После звонка в пожарную, Сын приступает к следующему шагу: использует огнетушитель и движется к выходу, демонстрируя правильный порядок действий.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Действуй! Сын (SON_01) в решительной позе, одной рукой направляет огнетушитель на источник огня (за кадром), а другой указывает в сторону эвакуационного выхода. Над выходом горит яркий зеленый знак. Из огнетушителя вырывается стилизованное облако белых частиц. Динамичная композиция, преувеличенная поза. Стиль: monochrome, green_accent, exaggerated_proportions, sharp_panel_angles, OMalley_inspired, high_contrast_ink. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting, action_lines.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, calm_scene, panic\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"Правильно. После звонка — помоги людям выйти. Если очаг маленький и ты уверен в своих силах — используй огнетушитель. Но помни: твоя жизнь важнее всего.\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Помочь другим, потушить, если безопасно, и эвакуироваться самому.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"Динамичная поза и экшн-линии передают срочность и правильность действий.\\\"\\n    },\\n    {\\n      \\\"id\\\": 7,\\n      \\\"source_excerpt\\\": \\\"4.3 По прибытии пожарного подразделения руководитель обязан проинформировать руководителя тушения пожара о конструктивных и технологических особенностях объекта.\\\",\\n      \\\"logical_summary\\\": \\\"Финал инструктажа: Отец, как ответственное лицо, встречает прибывшего пожарного и передаёт ему важную информацию об объекте.\\\",\\n      \\\"kandinsky_prompt\\\": \\\"Встреча пожарных. Отец (FATHER_01) и Сын (SON_01) стоят на фоне здания. Отец передает развернутый план-схему высокому, внушительному силуэту пожарного в полном обмундировании. Пожарный показан со спины, его фигура доминирует в кадре. Жест Отца уверенный и чёткий. Широкий план, вид снизу для придания героичности моменту. Стиль: monochrome, sharp_panel_angles, OMalley_inspired, high_contrast_ink, dramatic_shadows. character_tokens: \\\\\\\"FATHER_01 / SON_01\\\\\\\". aspect_ratio 1:1, high_detail, cinematic_lighting.\\\",\\n      \\\"negative_prompt\\\": \\\"no text, no speech bubbles, no logos, no full_pixel_art, no color_gradients, no inconsistent_character_appearance, fire, chaos\\\",\\n      \\\"dialogue\\\": [\\n        {\\n          \\\"speaker\\\": \\\"Отец\\\",\\n          \\\"text\\\": \\\"И последний шаг. Когда приехали профессионалы, твоя задача — помочь им. Встретить, доложить обстановку, передать всю информацию о здании. Это спасёт время и жизни.\\\"\\n        },\\n        {\\n          \\\"speaker\\\": \\\"Сын\\\",\\n          \\\"text\\\": \\\"Теперь я понимаю. Безопасность — это целая система. Спасибо, пап.\\\"\\n        }\\n      ],\\n      \\\"suggested_aspect_ratio\\\": \\\"1:1\\\",\\n      \\\"notes\\\": \\\"В кадре нет цветных акцентов, чтобы подчеркнуть серьёзность и завершённость инструктажа.\\\"\\n    }\\n  ]\\n}\\n```\"\n        }\n      ],\n      \"role\": \"model\"\n    },\n    \"finishReason\": \"STOP\",\n    \"index\": 0\n  }",
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        688,
        128
      ],
      "id": "7c0b95b0-6487-4a5f-99e4-fcea50c0d872",
      "name": "AI_Answer"
    },
    {
      "parameters": {
        "url": "=http://5.130.46.22:1212/background/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1856,
        176
      ],
      "id": "e1993e37-59f0-46f1-8f38-7cc1091dd1e3",
      "name": "HTTP Request",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=data",
        "binaryPropertyName": "background",
        "options": {
          "fileName": "background.png"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2160,
        176
      ],
      "id": "e177883c-0799-46e2-8013-f51334022d2f",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3216,
        160
      ],
      "id": "9e9e0586-4b25-4208-af94-492e693433a5",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "composite",
        "dataPropertyName": "=background",
        "dataPropertyNameComposite": "frame",
        "operator": "Plus",
        "positionX": "={{ (Math.floor($itemIndex % 3) * 390 + Math.floor(20 * $itemIndex)) }}",
        "positionY": "={{(Math.floor($itemIndex / 3) * 390) }}",
        "options": {
          "fileName": "comics",
          "format": "png"
        }
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        3952,
        208
      ],
      "id": "b6b6ab30-463c-4043-819f-1549104d8083",
      "name": "Edit Image",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3568,
        192
      ],
      "id": "8e2c925d-60c1-42ec-aa8f-9e96b7bb0293",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        4208,
        -128
      ],
      "id": "77283a76-8054-40c8-9b12-9a1bcf30b0fe",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "sHjbOx8ehkusD2J7",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "resize",
        "dataPropertyName": "frame",
        "width": 340,
        "height": 390,
        "resizeOption": "ignoreAspectRatio",
        "options": {}
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        3040,
        48
      ],
      "id": "b3fab706-d60e-4ade-8932-f130a24d88af",
      "name": "Edit Image1"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read PDF": {
      "main": [
        [
          {
            "node": "Message a model2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        []
      ]
    },
    "Message a model1": {
      "main": [
        []
      ]
    },
    "Message a model2": {
      "main": [
        [
          {
            "node": "GenearteJSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Generate": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Merge - Collect",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge - Collect": {
      "main": [
        [
          {
            "node": "Edit Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "AI_Answer",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GenearteJSON": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request - Generate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge - Collect",
            "type": "main",
            "index": 1
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI_Answer": {
      "main": [
        [
          {
            "node": "GenearteJSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "253ded7e-4b6b-4b24-b4e6-35b6a125b0f7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "83ceb29df94fc3072e3643d7fccc65cf595425deaa9cda5b2b8f17a94ed1d404"
  },
  "id": "lSS3E4WPFuc7airh",
  "tags": []
}